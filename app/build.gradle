plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'vip.lovek.asm-timer'
}

def androidID = rootProject.ext.androidID
def appId = rootProject.ext.appID.app
def dependenciesID = rootProject.ext.dependenciesID
def testDependenciesID = rootProject.ext.testDependenciesID
def testAndroidDependenciesID = rootProject.ext.testAndroidDependenciesID

android {
    compileSdk androidID.compileSdk

    defaultConfig {
        applicationId appId
        minSdk androidID.minSdk
        targetSdk androidID.targetSdk
        versionCode androidID.versionCode
        versionName androidID.versionName

        testInstrumentationRunner androidID.testInstrumentationRunner

        buildConfigField("boolean", "isRelease", String.valueOf(isRelease))

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

// 严格检查代码
//allprojects {
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }
//}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    dependenciesID.each { k, v -> implementation v }
    testImplementation testDependenciesID.junit
    testAndroidDependenciesID.each { k, v -> androidTestImplementation v }

    implementation project(path: ':personal')
    implementation project(path: ':common')
    kapt project(":arouter-compiler")
//    annotationProcessor project(":arouter-compiler")
}
